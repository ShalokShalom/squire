import "card.sq"

form Pile {
	matter cards

	recollect create() {
		nigh cards = []
		nigh i = N

		cards[LII] = ni # just for efficiency.

		whilst i < LII {
			cards[i + I] = Card(i % XIII, i / XIII)
			i = i + I
		}

		reward Pile(cards)
	}

	change shuffle() {
		nigh len = my.()
		nigh n = C + (random() % CCC)
		nigh cards = my.cards

		whilst n {
			i = (random() % len) + I
			j = (random() % len) + I

			tmp = cards[i]
			cards[i] = cards[j]
			cards[j] = tmp

			n = n - I
		}
	}

	change length() {
		reward length(my.cards)
	}

	change to_string() {
		nigh i = I
		nigh len = my.length()
		nigh str = ""

		whilst i < len {
			str = "\(str)\(my.cards[i = i + I]) "
		}

		reward substr(str, I, length(str))
	}

	change draw() {
		reward delete(my.cards, I)
	}

	change add(card) {
		insert(my.cards, my.length(), card)
	}
}
