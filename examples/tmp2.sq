@henceforth $a($x) = $x;
@henceforth $b($a) = $a("A");

dump($b(((()));
#dump($add(4, 5))

__END__
@henceforth $form = form $name { matter x, y };
@henceforth $name = foo;
$form;
@henceforth $name = bar;
$form;

dump(foo(3,4));
dump(bar(3,4));
#proclaim("Hear ye, hear ye. $foo=\($foo)\n")





__END__
i=N;
bar:
proclaim(3);
whence bar;
proclaim("spot I: \(i=i+1)\n");

whence bar;
proclaim("spot II: \(i=i+1)\n");

whence bar;
proclaim("spot III: \(i=i+1)\n");

__END__

a=["a=", 0, ";"];a[1]=string(a)
proclaim(a)

__END__
# journey sieve(n){	
# 	insert(sieve=[],n,null);
# 	reward sieve
# }
# 
# dump

# `journey`s are functions
journey fizzbuzz() {
	nigh i = I # numbers are roman numerals

	# while i is less than 100
	whilst i <= C {
		nigh txt = ""

		if !(i % III) { txt = txt + "Fizz" }
		if !(i % V) { txt = txt + "Buzz" }

		# `proclaim` is print
		if txt {
			proclaim(txt + "\n")
		} alas { # `alas` is `else`
			# `arabic` is used to convert output to roman numerals.
			proclaim(arabic(i) + "\n")
		}

		i = i + I
	}
}

fizzbuzz()